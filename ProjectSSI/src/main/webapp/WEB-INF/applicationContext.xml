<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd 
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

    <!-- 引入所有spring配置文件 -->
    <import resource="classpath*:configSprings/*ApplicationContext.xml"/>
    
    <!-- 读jdbc配置文件 -->
	<bean id = "propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name = "locations">
			<list>
			   <value>classpath*:configProperties/jdbc.properties</value>
			</list>
		</property>
	</bean>
	 <!-- 阿里 druid 数据库连接池 -->
    <bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close">  
         <!-- 数据库基本信息配置 -->
         <property name = "url" value = "${jdbc.url}"/>  
         <property name = "username" value = "${jdbc.username}"/>  
         <property name = "password" value = "${jdbc.password}"/>  
         <property name = "driverClassName" value = "${jdbc.driverClassName}"/>  
         <property name = "filters" value = "${jdbc.filters}"/>  
          <!-- 最大并发连接数 -->
         <property name = "maxActive" value = "${jdbc.maxActive}"/>
         <!-- 初始化连接数量 -->
         <property name = "initialSize" value = "${jdbc.initialSize}"/>
         <!-- 配置获取连接等待超时的时间 -->
         <property name = "maxWait" value = "${jdbc.maxWait}"/>
         <!-- 最小空闲连接数 -->
         <property name = "minIdle" value = "${jdbc.minIdle}"/>  
          <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name = "timeBetweenEvictionRunsMillis" value ="${jdbc.timeBetweenEvictionRunsMillis}"/>
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name = "minEvictableIdleTimeMillis" value ="${jdbc.minEvictableIdleTimeMillis}"/>  
         <property name = "validationQuery" value = "${jdbc.validationQuery}"/>  
         <property name = "testWhileIdle" value = "${jdbc.testWhileIdle}"/>  
         <property name = "testOnBorrow" value = "${jdbc.testOnBorrow}"/>  
         <property name = "testOnReturn" value = "${jdbc.testOnReturn}"/>  
         <property name = "maxOpenPreparedStatements" value ="${jdbc.maxOpenPreparedStatements}"/>
         <!-- 打开 removeAbandoned 功能 -->
         <property name = "removeAbandoned" value = "${jdbc.removeAbandoned}"/>
         <!-- 1800 秒，也就是 30 分钟 -->
         <property name = "removeAbandonedTimeout" value ="${jdbc.removeAbandonedTimeout}"/>
         <!-- 关闭 abanded 连接时输出错误日志 -->   
         <property name = "logAbandoned" value = "${jdbc.logAbandoned}"/>
    </bean>
    
    <!-- 事务 -->
    <bean name = "transactionManager" class ="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
      <property name = "dataSource" ref = "dataSource"></property>
    </bean >
    
    <!-- mybatis读取链接和加载.xml -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <property name="dataSource" ref="dataSource" />
	  <property name="mapperLocations" value="classpath*:configMappers/*.mybatis.xml"/>
	</bean>
    
</beans>